{"name":"Createrepo_c","tagline":"C implementation of the createrepo","body":"# createrepo_c\r\n\r\nC implementation of createrepo\r\n\r\nRun `createrepo -h` for usage syntax.\r\n\r\n# Devel tips\r\n\r\n## Building\r\n\r\nPackage build requires - Pkg name in Fedora/Ubuntu:\r\n\r\n* bzip2 (http://bzip.org/) - bzip2-devel/libbz2-dev\r\n* cmake (http://www.cmake.org/) - cmake/cmake\r\n* expat (http://expat.sourceforge.net/) - expat-devel/libexpat1-dev\r\n* file (http://www.darwinsys.com/file/) - file-devel/libmagic-dev\r\n* glib2 (http://developer.gnome.org/glib/) - glib2-devel/libglib2.0-dev\r\n* libcurl (http://curl.haxx.se/libcurl/) - libcurl-devel/libcurl4-openssl-dev\r\n* libxml2 (http://xmlsoft.org/) - libxml2-devel/libxml2-dev\r\n* python (http://python.org/) - python2-devel/libpython2.7-dev\r\n* rpm (http://www.rpm.org/) - rpm-devel/librpm-dev\r\n* openssl (http://www.openssl.org/) - openssl-devel/libssl-dev\r\n* sqlite3 (https://sqlite.org/) - sqlite-devel/libsqlite3-dev\r\n* xz (http://tukaani.org/xz/) - xz-devel/liblzma-dev\r\n* zlib (http://www.zlib.net/) - zlib-devel/zlib1g-dev\r\n* *Documentation:* doxygen (http://doxygen.org/) - doxygen/doxygen\r\n* *Documentation:* sphinx (http://sphinx-doc.org/) - python-sphinx/\r\n* **Test requires:** check (http://check.sourceforge.net/) - check-devel/check\r\n* **Test requires:** python-nose (https://nose.readthedocs.org/) - python-nose/python-nose\r\n* **Experimental support:** drpm (https://git.fedorahosted.org/git/drpm.git)\r\n\r\nFrom your checkout dir:\r\n\r\n    mkdir build\r\n    cd build/\r\n    cmake ..\r\n    make\r\n\r\nTo build the documentation, from the build/ directory:\r\n    make doc\r\n\r\n**Note:** For build with debugging symbols you could use (from the build/ directory):\r\n\r\n    cmake -DCMAKE_BUILD_TYPE:STRING=DEBUG .. && make\r\n\r\n## Building from an rpm checkout\r\n\r\nE.g. when you want to try weak and rich dependencies.\r\n\r\n    cmake -DRPM_PATH=\"/home/tmlcoch/git/rpm\" .. && make\r\n\r\n**Note:** The RPM must be buit in that directory\r\n\r\nCommands I am using for building of RPM:\r\n\r\n    cd /home/tmlcoch/git/rpm\r\n    CPPFLAGS='-I/usr/include/nss3/ -I/usr/include/nspr4/' ./autogen.sh --rpmconfigure --with-vendor=redhat --with-external-db --with-lua --with-selinux --with-cap --with-acl --enable-python\r\n    make clean && make\r\n\r\n## Building with delta rpm support (drpm)\r\n\r\nAt first, you have to checkout drpm library from the\r\nhttps://git.fedorahosted.org/git/drpm.git and build it.\r\n\r\n    git clone ssh://git.fedorahosted.org/git/drpm.git\r\n    cd drpm/\r\n    make\r\n\r\nThen run ``cmake`` for createrepo_c with param ``-DDRPM_PATH=\"/home/tmlcoch/git/drpm\"``\r\nwhere the path is path to your build of drpm library.\r\n\r\n    cmake -DDRPM_PATH=\"/home/tmlcoch/git/drpm\" .. && make\r\n\r\n## Build tarball\r\n\r\n    utils/make_tarball.sh [git revision]\r\n\r\nWithout git revision specified HEAD is used.\r\n\r\n## Build RPM package\r\n\r\nModify createrepo_c.spec and run:\r\n\r\n    utils/make_rpm.sh\r\n\r\nNote: [Current .spec for Fedora rawhide](http://pkgs.fedoraproject.org/cgit/createrepo_c.git/plain/createrepo_c.spec)\r\n\r\n## Testing\r\n\r\nAll unit tests run from librepo checkout dir\r\n\r\n### Build C tests && run c and python tests\r\n\r\n    make tests && make test\r\n\r\nNote: For a verbose output of testing use: ``make ARGS=\"-V\" test``\r\n\r\n### Run only C unittests (from your checkout dir):\r\n\r\n    build/tests/run_gtester.sh\r\n\r\nNote: The C tests have to be builded by ``make tests``)!\r\n\r\n### Run only Python unittests (from your checkout dir):\r\n\r\n    PYTHONPATH=`readlink -f ./build/src/python/` nosetests -s tests/python/tests/\r\n\r\n### Links\r\n\r\n[Bugzilla](https://bugzilla.redhat.com/buglist.cgi?bug_status=NEW&bug_status=ASSIGNED&bug_status=MODIFIED&bug_status=VERIFIED&component=createrepo_c&query_format=advanced)\r\n\r\n### Important notes\r\n\r\nIn original createrepo ``sha`` is a nickname for the ``sha1`` checksum.\r\nCreaterepo_c mimics this behaviour.\r\n\r\n---------------------------------------------------\r\n\r\n# Differences in behavior between createrepo_c and createrepo\r\n\r\n## Checksums after update\r\n\r\n### Use case:\r\n- Repodata in repo/ are has checksum xxx\r\n- Params: --update --checksum=yyy repo/\r\n\r\n### createrepo_c result:\r\n- All package checksums are recalculated into yyy\r\n\r\n### original createrepo result:\r\n- Only new and changed packages has yyy checksums\r\n  other packages has still xxx checksums\r\n\r\n\r\n## Skip symlinks param\r\n\r\n### Use case:\r\n- Some packages in repo/ are symlinks\r\n- Params: --skip-symlinks repo/\r\n\r\n### createrepo_c result:\r\n- Symlinked packages are ignored\r\n\r\n### original createrepo result:\r\n- Symlinked packages are processed\r\n  (https://bugzilla.redhat.com/show_bug.cgi?id=828848)\r\n\r\n\r\n## Base path from update-md-path repo\r\n\r\n### Use case:\r\n- A somebody else's repo is somewhere\r\n- The repo items have set a base path to http://foo.com/\r\n- We want to create metadata for our repo\r\n- Some packages in our repo are same as packages in somebody else's repo\r\n- We want to speed up creation of our repodata with\r\n  combo --update and --update-md-path=somebody_else's_repo\r\n- Params: --update --update-md-path=ftp://somebody.else/repo our_repo/\r\n\r\n### createrepo_c results:\r\n- All our packages have no base path set (if we don't set --baseurl explicitly)\r\n\r\n### original createrepo result:\r\n- Some packages in metadata (which was same in our repo and in somebody\r\n  else's repo) have base path set to http://foo.com/\r\n- (https://bugzilla.redhat.com/show_bug.cgi?id=875029)\r\n\r\n\r\n## Crippled paths in filelists.xml after update\r\n\r\n### Use case:\r\n- A repo with old metadata exists\r\n- We want to update metadata\r\n- Params: --update repo/\r\n\r\n### createrepo_c results:\r\n- All is fine\r\n\r\n### original createrepo result:\r\n- Some paths in filelists.xml are crippled\r\n  (https://bugzilla.redhat.com/show_bug.cgi?id=835565)\r\n\r\n\r\n## --update leaves behind some old repodata files\r\n\r\n### Use case:\r\n- A repo with repodata created with --simple-md-filenames exists\r\n- We want to update repodata to have checksums in filenames\r\n- Params: --update repo/\r\n\r\n### createrepo_c results:\r\n- All repodata contains checksum in the name\r\n\r\n### original createrepo result:\r\n- All repodata contains checksum in the name\r\n- There are old metadata without checksum in the name too\r\n- (https://bugzilla.redhat.com/show_bug.cgi?id=836917)\r\n\r\n## Modifyrepo_c\r\n\r\nModifyrepo_c is compatible with classical Modifyrepo except some misbehaviour:\r\n\r\n* TODO: Report bugs and add reference here\r\n\r\n### Batch file\r\n\r\nWhen there is need to do several modification to repository (``repomd.xml``)\r\na batch file could be used.\r\n\r\n> Batch file is Modifyrepo_c specific. It is not supported by the classical\r\nModifyrepo - at least not yet.\r\n\r\n#### Example\r\n\r\n    # Add:\r\n    #   [<path/to/file>]\r\n    #   <options>\r\n\r\n    # Metadata that use a bunch of config options\r\n    [some/path/comps.xml]\r\n    type=group\r\n    compress=true\r\n    compress-type=gz\r\n    unique-md-filenames=true\r\n    checksum=sha256\r\n    new-name=group.xml\r\n    \r\n    # Metadata that use default settings\r\n    [some/path/bar.xml]\r\n    \r\n    # Remove:\r\n    #   [<metadata name>]\r\n    #   remove=true\r\n    \r\n    [updateinfo]\r\n    remove=true\r\n    \r\n\r\n#### Supported options\r\n\r\n| Option name   | Description | Supported value(s) | Default |\r\n|---------------|-------------|--------------------|---------|\r\n| path          | Path to the file. When specified it override the path specified in group name (name between [] parenthesis) | Any string | group name (string between '[' ']') |\r\n| type          | Type of the metadata | Any string | Based on filename |\r\n| remove        | Remove specified file/type from repodata | ``true`` or ``false`` | ``false`` |\r\n| compress      | Compress the new metadata before adding it to repo | ``true`` or ``false`` | ``true`` |\r\n| compress-type | Compression format to use | ``gz``, ``bz2``, ``xz`` | ``gz`` |\r\n| checksum      | Checksum type to use | ``md5``, ``sha``, ``sha1``, ``sha224``, ``sha256``, ``sha384``, ``sha512`` | ``sha256`` |\r\n| unique-md-filenames | Include the file's checksum in the filename | ``true`` or ``false`` | ``true`` |\r\n| new-name      | New name for the file. If ``compress`` is ``true``, then compression suffix will be appended. If ``unique-md-filenames`` is ``true``, then checksum will be prepended. | Any string | Original source filename | \r\n\r\n#### Notes\r\n\r\n* Lines beginning with a '#' and blank lines are considered comments.\r\n* If ``remove=true`` is used, no other config options should be used\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}