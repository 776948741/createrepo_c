PROJECT (createrepo_c)
CMAKE_MINIMUM_REQUIRED (VERSION 2.6)

set (CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS} -Wall -Wextra")
IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING
        "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel."
        FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

IF(CMAKE_BUILD_TYPE AND CMAKE_BUILD_TYPE STREQUAL "DEBUG")
    MESSAGE("Build type is set do DEBUG!")
ENDIF()


# Add path with own cmake modules

INCLUDE_DIRECTORIES (${CMAKE_SOURCE_DIR})
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")


# Find necessare libraries

find_package(GLIB2 REQUIRED)
find_package(BZip2 REQUIRED)
find_package(GTHREAD2 REQUIRED)
find_package(ZLIB REQUIRED)
find_package(EXPAT REQUIRED)
find_package(LibXml2 REQUIRED)
find_package(Libmagic REQUIRED)
find_package(CURL REQUIRED)


# Check libraries

IF (NOT GLIB2_FOUND)
    MESSAGE(FATAL_ERROR "No GLIB2 library installed")
ENDIF (NOT GLIB2_FOUND)

IF (NOT BZIP2_FOUND)
    MESSAGE(FATAL_ERROR "No BZip2 library installed")
ENDIF (NOT BZIP2_FOUND)

IF (NOT GTHREAD2_FOUND)
    MESSAGE(FATAL_ERROR "No GTHREAD2 library installed")
ENDIF (NOT GTHREAD2_FOUND)

IF (NOT ZLIB_FOUND)
    MESSAGE(FATAL_ERROR "No Zlib library installed")
ENDIF (NOT ZLIB_FOUND)

IF (NOT EXPAT_FOUND)
    MESSAGE(FATAL_ERROR "No Expat library installed")
ENDIF (NOT EXPAT_FOUND)

IF (NOT LIBXML2_FOUND)
    MESSAGE(FATAL_ERROR "No LibXml2 library installed")
ENDIF (NOT LIBXML2_FOUND)

IF (NOT Libmagic_FOUND)
    MESSAGE(FATAL_ERROR "No Libmagic library installed")
ENDIF (NOT Libmagic_FOUND)

IF (NOT CURL_FOUND)
    MESSAGE(FATAL_ERROR "No CURL library installed")
ENDIF (NOT CURL_FOUND)

# Add include dirs

include_directories(${GLIB2_INCLUDE_DIRS})
include_directories(${BZIP2_INCLUDE_DIRS})
include_directories(${GTHREAD2_INCLUDE_DIRS})
include_directories(${ZLIB_INCLUDE_DIRS})
include_directories(${EXPAT_INCLUDE_DIRS})
include_directories(${LIBXML2_INCLUDE_DIR})
include_directories(${CURL_INCLUDE_DIR})


# rpm:

FIND_LIBRARY (RPMDB_LIBRARY NAMES rpmdb)
IF (NOT RPMDB_LIBRARY)
    FIND_LIBRARY (RPMDB_LIBRARY NAMES rpm)
    IF (NOT RPMDB_LIBRARY)
        MESSAGE(FATAL_ERROR "No Rpm library installed")
    ENDIF (NOT RPMDB_LIBRARY)
ENDIF (NOT RPMDB_LIBRARY)


# rpmio:

FIND_LIBRARY (RPMIO_LIBRARY NAMES rpmio)
IF (RPMIO_LIBRARY)
    SET(RPMDB_LIBRARY ${RPMIO_LIBRARY} ${RPMDB_LIBRARY})
ELSE (RPMIO_LIBRARY)
    MESSAGE(FATAL_ERROR "No Rpmio library installed")
ENDIF (RPMIO_LIBRARY)


# Get package version
FILE(READ src/version.h CURRENT_VERSION_H)
STRING(REGEX MATCH "\#define MAJOR_VERSION +([0-9]+)" MAJOR_VERSION ${CURRENT_VERSION_H})
SET(CPACK_PACKAGE_VERSION_MAJOR ${CMAKE_MATCH_1})
STRING(REGEX MATCH "\#define MINOR_VERSION +([0-9]+)" MINOR_VERSION ${CURRENT_VERSION_H})
SET(CPACK_PACKAGE_VERSION_MINOR ${CMAKE_MATCH_1})
STRING(REGEX MATCH "\#define PATCH_VERSION +([0-9]+)" PATCH_VERSION ${CURRENT_VERSION_H})
SET(CPACK_PACKAGE_VERSION_PATCH ${CMAKE_MATCH_1})
message("Package version: ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")


# CPack stuff

INCLUDE(InstallRequiredSystemLibraries)

SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "C implementation of createrepo")
SET(CPACK_PACKAGE_VENDOR "Fedora Project")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/COPYING")
SET(CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/README")
SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
SET(CPACK_STRIP_FILES "usr/bin/createrepo_c")
SET(CPACK_SOURCE_STRIP_FILES "")
SET(CPACK_PACKAGE_EXECUTABLES "createrepo_c" "createrepo_c")

SET(CPACK_GENERATOR "TGZ")

# Not useful now because cpack doesn't support generate SRPM packages
#SET(CPACK_GENERATOR "TGZ;RPM")
#SET(CPACK_RPM_PACKAGE_RELEASE "1")
#SET(CPACK_RPM_PACKAGE_LICENSE "GPLv2")
#SET(CPACK_RPM_PACKAGE_GROUP "System Environment/Base")
#SET(CPACK_RPM_PACKAGE_REQUIRES "glib2 >= 2.26.0, file-libs, zlib, bzip2, rpm-libs >= 4.8.1, libxml2")

INCLUDE(CPack)


# Other files

SET(CMAKE_INSTALL_PREFIX "/")

INSTALL(FILES README
              COPYING
              DESTINATION "/usr/share/doc/createrepo_c-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")


# Gen manpage

#message("Gen manpage")
#execute_process(COMMAND bash gen_manpage.sh src/cmd_parser.c ../doc/ WORKING_DIRECTORY utils/)


# LIB_INSTALL_DIR

IF (NOT LIB_INSTALL_DIR)
  SET (LIB_INSTALL_DIR "/usr/lib")
ENDIF (NOT LIB_INSTALL_DIR)


# Add custom target for tests

ADD_CUSTOM_TARGET(tests)


# Subdirs

ADD_SUBDIRECTORY (src)
ADD_SUBDIRECTORY (doc)
ADD_SUBDIRECTORY (tests EXCLUDE_FROM_ALL)
